homeassistant:
  # Name of the location where Home Assistant is running
  name: !secret homeassistant_name
  # Location required to calculate the time the sun rises and sets
  latitude: !secret homeassistant_latitude
  longitude: !secret homeassistant_longitude
  elevation: !secret homeassistant_elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # C for Celcius, F for Fahrenheit
  temperature_unit: C
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: !secret homeassistant_time_zone
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
introduction:

# Enables the frontend
frontend:
#  themes:

# Enables configuration UI
config:

media_player:
  - platform: cast

  - platform: gpmdp
    host: !secret laptop_IP
    name: Media_Player_IDS-Laptop

  - platform: kodi
  # BedKodi
    name: BedKodi
    host: !secret bedkodi_HOST
    username: !secret bedkodi_USER
    password: !secret bedkodi_PASS
    turn_on_action:
      - service: wake_on_lan.send_magic_packet
        data:
          # WiFi?
          mac: !secret bedkodi_MAC
          broadcast_address: !secret LAN_BROADCAST
    turn_off_action:
      service: media_player.kodi_call_method
      data:
        entity_id: media_player.BedKodi
        method: System.Shutdown

  - platform: kodi
  # LoungeKodi
    name: LoungeKodi
    host: !secret loungekodi_HOST
    username: !secret loungekodi_USER
    password: !secret loungekodi_PASS
    turn_on_action:
      - service: wake_on_lan.send_magic_packet
        data:
          # WiFi?
          mac: !secret loungekodi_MAC
          broadcast_address: !secret LAN_BROADCAST
    turn_off_action:
      service: media_player.kodi_call_method
      data:
        entity_id: media_player.LoungeKodi
        method: System.Shutdown

http:
  # Secrets are defined in the file secrets.yaml
  api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  base_url: !secret http_base_url
  # SSL
  ssl_certificate: !secret ssl_certificate
  ssl_key: !secret ssl_key
  cors_allowed_origins:
    - https://google.com
    - https://www.home-assistant.io
  use_x_forwarded_for: True
  # Passwordless access
  trusted_networks: !secret home_trusted_networks

  # Prevent too many failed login attempes
  ip_ban_enabled: true
  login_attempts_threshold: 3

# Add Wake on LAN Powers to HASS
wake_on_lan:

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  include_used_components: true

# avahi, bonjour, zeroconf, rendezvous
zeroconf:

# Download files into dowload dir
downloader:
  download_dir: !secret home_assistant_download_dir

# Discover some devices automatically
discovery:

ifttt:
  key: !secret ifttt_key

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# ffmpeg
ffmpeg:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Logging
logger:
  default: info
# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

# Weather prediction
sensor:
  - platform: uptime

  - platform: moon

  # DNS resolver
  - platform: dnsip
    hostame: !secret external_HOST
    resolver: !secret external_DNS

  - platform: dnsip
    hostname: !secret local_HOST
    resolver: !secret local_DNS

  - platform: cert_expiry
    host: !secret https_base_url
    port: 8123

  - platform: haveibeenpwned
    email: !secret haveibeenpwned_check

  - platform: waqi
    token: !secret AQICN_API_TOKEN
    locations:
      - mountain creek
#    stations:
#      - Beijing US Embassy

  - platform: yr
#sensor:
  - platform: bom
    # TewantinNoosa
    # IDQ60901.94570
    # Toowoomba
    # IDQ60901.95551
    # Sunshine Coast Airport
    station: IDQ60901.94569
    name: Sunshine Coast Airport
    monitored_conditions:
      - apparent_t
#      - cloud
#      - cloud_base_m
#      - cloud_oktas
#      - cloud_type_id
#      - cloud_type
#      - delta_t
      - gust_kmh
#      - gust_kt
      - air_temp
#      - dewpt
      - press
#      - press_qnh
#      - press_msl
      - press_tend
      - rain_trace
      - rel_hum
#      - sea_state
#      - swell_dir_worded
#      - swell_height
#      - swell_period
      - vis_km
      - weather
      - wind_dir
      - wind_spd_kmh
#      - wind_spd_kt

# Text to speech
tts:
  - platform: google

# Embedded MQTT Broker
mqtt:
#  embedded:
#    listeners:
#      default:
#        bind: 0.0.0.0:1883
  discovery: true
  discovery_prefix: homeassistant
  birth_message:
    topic: 'hass/status'
    payload: 'online'
  will_message:
    topic: 'hass/status'
    payload: 'offline'

# Cloud
cloud:
  google_actions:
    filter:
      include_entities:
        - media_player.BedKodi
#       - light.kitchen_left
#      include_domains:
#       - switch
#     exclude_entities:
#       - switch.outside
    entity_config:
      media_player.BedKodi:
        name: Bed Kodi
        aliases:
#        - Bed Kodi
         - Media Players
google_assistant:
  project_id: !secret google_assistant_PROJECT_ID
  client_id: !secret google_assistant_CLIENT_ID
  access_token: !secret google_assistant_ACCESS_TOKEN
  agent_user_id: !secret google_assistant_AGENT_USER_ID
  api_key: !secret google_assistant_API_KEY
  expose_by_default: true
  # exposed_domains:
  #   - switch
  #   - light
  #   - group
  # entity_config:
  #   switch.kitchen:
  #     name: Custom Name for Google Assistant
  #     aliases:
  #       - bright lights
  #       - entry lights
  #   light.living_room:
  #     expose: false
  #     room: living room

# Apple HomeKit and Siri Control
homekit:
  auto_start: False

# Tracker
device_tracker:
  # - platform: mikrotik
  #   host: !secret mikrotik_IP
  #   username: !secret mikrotik_USER
  #   password: !secret mikrotik_PASS

  - platform: huawei_router
    host: !secret huawei_IP
    username: !secret huawei_USER
    password: !secret huawei_PASS
   
  - platform: nmap_tracker
    interval_seconds: 90
    consider_home: 240
    track_new_devices: yes
    hosts: !secret nmap_tracked_hosts

  - platform: google_maps
    username: !secret mygoogleuser
    password: !secret mygooglepassword

#  - platform: google_maps
#    username: !secret mygoogleuser2
#    password: !secret mygooglepassword2

  - platform: owntracks
    max_gps_accuracy: 200
    waypoints: True
    mqtt_topic: "owntracks/#"
    events_only: True
    waypoint_whitelist:
      - Device-15
      - Device-01
      - Gavins-Android
      - Raes-Android
#    region_mapping:
#      cabin: home
#      office: work
alexa:
# Google Assistant Speach Thing
# https://www.home-assistant.io/components/dialogflow/
# https://github.com/home-assistant/home-assistant.github.io/blob/next/source/assets/HomeAssistant_APIAI.zip (Imported into Dialogueflow website)
dialogflow:

intent_script:
  Temperature:
    speech:
      text: The temperature at home is {{ states('sensor.home_temp') }} degrees
  LocateIntent:
    speech:
      text: >
        {%- for state in states.device_tracker -%}
          {%- if state.name.lower() == User.lower() -%}
            {{ state.name }} is at {{ state.state }}
          {%- elif loop.last -%}
            I am sorry, I do not know where {{ User }} is.
          {%- endif -%}
        {%- else -%}
          Sorry, I don't have any trackers registered.
        {%- endfor -%}
  WhereAreWeIntent:
    speech:
      text: >
        {%- if is_state('device_tracker.adri', 'home') and
               is_state('device_tracker.bea', 'home') -%}
          You are both home, you silly
        {%- else -%}
          Bea is at {{ states("device_tracker.bea") }}
          and Adri is at {{ states("device_tracker.adri") }}
        {% endif %}
  TurnLights:
    speech:
      text: Turning {{ Room }} lights {{ OnOff }}
    action:
      - service: notify.pushbullet
        data_template:
          message: Someone asked via apiai to turn {{ Room }} lights {{ OnOff }}
      - service_template: >
          {%- if OnOff == "on" -%}
            switch.turn_on
          {%- else -%}
            switch.turn_off
          {%- endif -%}
        data_template:
          entity_id: "switch.light_{{ Room | replace(' ', '_') }}"
notify:
  - name: HASS_Chrome_Notifier
    platform: html5
    gcm_api_key: !secret gcm_server_key
    gcm_sender_id: !secret gcm_sender_id

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
zone: !include zone.yaml
